---
title: Quiz de fin de chapitre
---

<p>
  Comme la seule nouveauté est la syntaxe dans ce chapitre, ce quiz sera très court.
  Le fonctionnement reste le même qu’avant.
</p>

<section class="quizz">
  <p>On a le code suivant :</p>

  <% code('ocaml') do %>
let ajouter element liste =
  liste @ [ element ]

let rec taille liste =
  match liste with
  | [] -> 0
  | x :: suite -> 1 + (taille suite)

let additionner n liste =
  match liste with
  | [] -> []
  | x :: suite -> (x + n) :: (additionner n suite)
  <% end %>

  <p>Que donnent ces expressions ?</p>

  <% code('ocaml') do %>
ajouter 42 [ 1 ; 2 ]
  <% end %>
  <input class="code" type="text" pattern="(\[ *1 *; *2 *; *42;? *\])|(1 *:: *2 *:: *42 *:: *\[ *\])" required>


  <% code('ocaml') do %>
(taille [ 1 ; 1 ; 1 ]) + (taille [ 5 ; 6; 30; 180; 0 ])
  <% end %>
  <input class="code" type="text" pattern=" *0*8 *" required>

  <% code('ocaml') do %>
(additionner 2 [0 ; 5]) @ (additionner 10 [])
  <% end %>
  <input class="code" type="text" pattern="(\[ *2 *; *7 *;? *\])|(2 *:: *7 *:: *\[ *\])" required>
</section>
